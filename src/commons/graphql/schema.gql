# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  number: Int!
  writer: String!
  title: String!
  contents: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductInfo {
  productId: String!
  productName: String!
  price: Int!
  isReviewed: Boolean!
  quantity: Int!
  size: String!
  color: String!
}

type ProductCart {
  id: String!
  productInfos: [ProductInfo!]!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductReview {
  id: String!
  contents: String!
  score: Int!
  user: User!
  product: Product!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Store {
  id: String!
  sales: Int!
  name: String!
  user: User!
  products: [Product!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: String!
  email: String!
  nickname: String!
  age: Int!
  point: Int!
  refreshToken: String
  role: ROLE!
  store: Store!
  productCart: ProductCart!
  productReviews: [ProductReview!]!
  favorites: [Favorite!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ROLE {
  ADMIN
  SELLER
  USER
}

type Favorite {
  id: String!
  product: Product!
  user: User!
}

type ProductImage {
  id: String!
  url: String!
  product: Product!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductCategory {
  id: String!
  name: String!
  products: [Product!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Stock {
  color: String!
  size: String!
  quantity: Int!
}

type Product {
  id: String!
  name: String!
  price: Int!
  description: String!
  stock: [Stock!]!
  favoriteCount: Int!
  productCategory: ProductCategory!
  store: Store!
  productImages: [ProductImage!]!
  productReviews: [ProductReview!]!
  favorites: [Favorite!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductTransaction {
  id: String!
  amount: Int!
  pointAmount: Int!
  impUid: String
  productInfos: [ProductInfo!]!
  status: PRODUCT_TRANSACTION_STATUS!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum PRODUCT_TRANSACTION_STATUS {
  PAYMENT
  DELIVERY
  CANCEL
  COMPLETE
  RETURN
}

type ChatRoom {
  id: String!
  room: String!
  user: User!
  product: Product!
  chatMessages: [ChatMessage!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ChatMessage {
  id: String!
  message: String!
  isSeller: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  chatRoom: ChatRoom!
}

type Query {
  fetchUser: String!
  fetchBoards: [Board!]!
  fetchBoard(boardNumber: Float!): Board!
  fetchProducts(page: Float!): [Product!]!
  fetchFavProducts: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchProductCount: Int!
  fetchProductCarts: [ProductCart!]!
  fetchProductReviewsFindByProduct(productId: String!, page: Float!): [ProductReview!]!
  fetchProductReviewsFindByUser(page: Float!): [ProductReview!]!
  fetchProductReviewsCountByProduct(productId: String!): Int!
  fetchProductReviewsCountByUser: Int!
  fetchProductCategories: [ProductCategory!]!
}

type Mutation {
  login(loginInput: LoginInput!): String!
  restoreAccessToken: String!
  createUser(createUserInput: CreateUserInput!): User!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdataBoardInput!, boardNumber: Float!): Board!
  deleteBoard(boardNumber: Float!): Boolean!
  toggleFavorite(productId: String!): String!
  uploadFile(files: [Upload!]!): [String!]!
  createProduct(createProductInput: CreateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  createProductCart(productId: String!, quantity: Float!): ProductCart!
  deleteProductCart(productCartId: String!): String!
  updateProductCart(updateProductCartInput: UpdateProductCartInput!): String!
  createProductReview(createProductReviewInput: CreateProductReviewInput!): ProductReview!
  deleteProductReview(productReviewId: String!): String!
  createProductTransaction(createProductTransactionInput: CreateProductTransactionInput!): ProductTransaction!
  createStore(createStoreInput: CreateStoreInput!): Store!
  createProductCategory(createProductCategoryInput: CreateProductCategoryInput!): ProductCategory!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  nickname: String!
  age: Int!
  role: ROLE!
}

input CreateBoardInput {
  writer: String!
  title: String!
  contents: String!
}

input UpdataBoardInput {
  writer: String
  title: String
  contents: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  productCategoryId: String!
  storeId: String!
  imageUrls: [String!]!
  stock: [StockInput!]!
}

input StockInput {
  color: String!
  size: String!
  quantity: Int!
}

input UpdateProductCartInput {
  productInfos: [ProductInfoInput!]!
  productCartId: String!
}

input ProductInfoInput {
  productId: String!
  productName: String!
  price: Int!
  isReviewed: Boolean!
  quantity: Int!
  size: String!
  color: String!
}

input CreateProductReviewInput {
  contents: String!
  score: Int!
  productInfo: ProductInfoInput!
  productTransactionId: String!
}

input CreateProductTransactionInput {
  productInfos: [ProductInfoInput!]!
  storeId: String!
  amount: Int!
  pointAmount: Int!
  impUid: String
}

input CreateStoreInput {
  name: String!
}

input CreateProductCategoryInput {
  name: String!
}